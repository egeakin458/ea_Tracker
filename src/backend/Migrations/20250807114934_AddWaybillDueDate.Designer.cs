// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ea_Tracker.Data;

#nullable disable

namespace ea_Tracker.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250807114934_AddWaybillDueDate")]
    partial class AddWaybillDueDate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ea_Tracker.Models.InvestigationExecution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid>("InvestigatorId")
                        .HasColumnType("char(36)");

                    b.Property<int>("ResultCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Execution_Status");

                    b.HasIndex("InvestigatorId", "StartedAt")
                        .HasDatabaseName("IX_Execution_Investigator_Started");

                    b.ToTable("InvestigationExecutions");
                });

            modelBuilder.Entity("ea_Tracker.Models.InvestigationResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ExecutionId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Payload")
                        .HasColumnType("longtext");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Severity")
                        .HasDatabaseName("IX_Result_Severity");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("IX_Result_Timestamp");

                    b.HasIndex("EntityType", "EntityId")
                        .HasDatabaseName("IX_Result_Entity");

                    b.HasIndex("ExecutionId", "Timestamp")
                        .HasDatabaseName("IX_Result_Execution_Time");

                    b.ToTable("InvestigationResults");
                });

            modelBuilder.Entity("ea_Tracker.Models.InvestigatorInstance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomConfiguration")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastExecutedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LastExecutedAt")
                        .HasDatabaseName("IX_InvestigatorInstance_LastExecuted");

                    b.HasIndex("TypeId", "IsActive")
                        .HasDatabaseName("IX_InvestigatorInstance_Type_Active");

                    b.ToTable("InvestigatorInstances");
                });

            modelBuilder.Entity("ea_Tracker.Models.InvestigatorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DefaultConfiguration")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IX_InvestigatorType_Code");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_InvestigatorType_IsActive");

                    b.ToTable("InvestigatorTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "invoice",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DefaultConfiguration = "{\"thresholds\":{\"maxTaxRatio\":0.5,\"minAmount\":0,\"maxFutureDays\":0}}",
                            Description = "Analyzes invoices for anomalies including negative amounts, excessive tax ratios, and future dates",
                            DisplayName = "Invoice Investigator",
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            Code = "waybill",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DefaultConfiguration = "{\"thresholds\":{\"maxDaysLate\":7}}",
                            Description = "Monitors waybills for delivery delays and identifies shipments older than configured thresholds",
                            DisplayName = "Waybill Investigator",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("ea_Tracker.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("HasAnomalies")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("InvoiceType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LastInvestigatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RecipientName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalTax")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("HasAnomalies")
                        .HasDatabaseName("IX_Invoice_Anomalies");

                    b.HasIndex("IssueDate")
                        .HasDatabaseName("IX_Invoice_IssueDate");

                    b.HasIndex("LastInvestigatedAt")
                        .HasDatabaseName("IX_Invoice_LastInvestigated");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ea_Tracker.Models.Waybill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("GoodsIssueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("HasAnomalies")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastInvestigatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RecipientName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ShippedItems")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WaybillType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GoodsIssueDate")
                        .HasDatabaseName("IX_Waybill_IssueDate");

                    b.HasIndex("HasAnomalies")
                        .HasDatabaseName("IX_Waybill_Anomalies");

                    b.HasIndex("LastInvestigatedAt")
                        .HasDatabaseName("IX_Waybill_LastInvestigated");

                    b.ToTable("Waybills");
                });

            modelBuilder.Entity("ea_Tracker.Models.InvestigationExecution", b =>
                {
                    b.HasOne("ea_Tracker.Models.InvestigatorInstance", "Investigator")
                        .WithMany("Executions")
                        .HasForeignKey("InvestigatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Investigator");
                });

            modelBuilder.Entity("ea_Tracker.Models.InvestigationResult", b =>
                {
                    b.HasOne("ea_Tracker.Models.InvestigationExecution", "Execution")
                        .WithMany("Results")
                        .HasForeignKey("ExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Execution");
                });

            modelBuilder.Entity("ea_Tracker.Models.InvestigatorInstance", b =>
                {
                    b.HasOne("ea_Tracker.Models.InvestigatorType", "Type")
                        .WithMany("Instances")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ea_Tracker.Models.InvestigationExecution", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("ea_Tracker.Models.InvestigatorInstance", b =>
                {
                    b.Navigation("Executions");
                });

            modelBuilder.Entity("ea_Tracker.Models.InvestigatorType", b =>
                {
                    b.Navigation("Instances");
                });
#pragma warning restore 612, 618
        }
    }
}
